package info.jab.demo;

/**
 * Problem 2: Even Fibonacci Numbers
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 */
public class FibonacciEvenSum {

    /**
     * Calculates the sum of even-valued terms in the Fibonacci sequence
     * that do not exceed the given limit.
     *
     * @param limit the maximum value for Fibonacci terms
     * @return the sum of even-valued terms
     */
    public long calculateEvenSum(int limit) {
        long sum = 0;
        int first = 1;
        int second = 2;

        // Check if the first term (1) is even and within limit
        if (first <= limit && first % 2 == 0) {
            sum += first;
        }

        // Check if the second term (2) is even and within limit
        if (second <= limit && second % 2 == 0) {
            sum += second;
        }

        // Generate Fibonacci sequence and sum even terms
        while (second <= limit) {
            int next = first + second;

            // Check if the next term exceeds the limit
            if (next > limit) {
                break;
            }

            // Check if the next term is even and add it to sum
            if (next % 2 == 0) {
                sum += next;
            }

            // Move to the next pair of Fibonacci numbers
            first = second;
            second = next;
        }

        return sum;
    }

    /**
     * Main method to demonstrate the solution for the problem.
     * The limit is set to 4,000,000 as specified in the problem.
     */
    public static void main(String[] args) {
        FibonacciEvenSum fibonacci = new FibonacciEvenSum();
        int limit = 4_000_000;

        long result = fibonacci.calculateEvenSum(limit);

        System.out.println("Sum of even-valued terms in Fibonacci sequence");
        System.out.println("that do not exceed " + limit + ": " + result);

        // Additional demonstration: show first 20 Fibonacci numbers
        System.out.println("\nFirst 20 Fibonacci numbers:");
        fibonacci.printFibonacciSequence(20);
    }

    /**
     * Helper method to print a sequence of Fibonacci numbers.
     *
     * @param count the number of Fibonacci numbers to print
     */
    public void printFibonacciSequence(int count) {
        if (count <= 0) {
            return;
        }

        int first = 1;
        int second = 2;

        System.out.print(first);
        if (count > 1) {
            System.out.print(", " + second);
        }

        for (int i = 2; i < count; i++) {
            int next = first + second;
            System.out.print(", " + next);
            first = second;
            second = next;
        }
        System.out.println();
    }
}
